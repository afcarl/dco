package bnb.tsp;

import java.util.HashSet;
import java.util.Set;

/**
 * Tests a solution to make sure it's the cost that the solver reports.
 */
public class TestSolCost {
	public static void main(String[] args) {
//		String solStr = 
//			"(145, 215), (161, 242), (163, 247), (159, 261), (151, 264), (130, 254), (128, 252), (146, 246)";
		String solStr = //"(37, 52, 0), (38, 46, 31), (49, 49, 1), (58, 48, 28), (62, 42, 20), (52, 41, 15), (52, 33, 8), (61, 33, 33), (58, 27, 29), (51, 21, 9), (59, 15, 38), (46, 10, 32), (36, 16, 14), (32, 22, 36), (27, 23, 16), (31, 32, 11), (40, 30, 4), (45, 35, 37), (42, 41, 10), (30, 48, 26), (21, 47, 5), (17, 33, 17), (20, 26, 3), (13, 13, 18), (5, 6, 39), (5, 25, 12), (7, 38, 24), (12, 42, 13), (8, 52, 23), (16, 57, 22), (17, 63, 6), (27, 68, 25), (31, 62, 7), (37, 69, 30), (43, 67, 27), (52, 64, 2), (63, 69, 35), (62, 63, 34), (57, 58, 19), (42, 57, 21)"; 
//"(37, 52, 0), (30, 48, 26), (40, 30, 4), (42, 41, 10), (49, 49, 1), (52, 64, 2), (63, 69, 35), (61, 33, 33), (51, 21, 9), (59, 15, 38), (46, 10, 32), (36, 16, 14), (31, 32, 11), (21, 47, 5), (16, 57, 22), (17, 63, 6), (8, 52, 23), (12, 42, 13), (7, 38, 24), (5, 25, 12), (5, 6, 39), (13, 13, 18), (17, 33, 17), (20, 26, 3), (27, 23, 16), (32, 22, 36), (45, 35, 37), (52, 33, 8), (58, 27, 29), (52, 41, 15), (62, 42, 20), (58, 48, 28), (57, 58, 19), (62, 63, 34), (43, 67, 27), (37, 69, 30), (27, 68, 25), (31, 62, 7), (42, 57, 21), (38, 46, 31)";
			"(37, 52, 0), (49, 49, 1), (58, 48, 28), (62, 42, 20), (56, 37, 49), (61, 33, 33), (58, 27, 29), (52, 33, 8), (52, 41, 15), (45, 35, 37), (42, 41, 10), (38, 46, 31), (30, 48, 26), (30, 40, 50), (32, 39, 45), (31, 32, 11), (25, 32, 46), (17, 33, 17), (20, 26, 3), (27, 23, 16), (32, 22, 36), (40, 30, 4), (48, 28, 48), (51, 21, 9), (59, 15, 38), (46, 10, 32), (39, 10, 44), (36, 16, 14), (30, 15, 43), (21, 10, 41), (13, 13, 18), (5, 6, 39), (10, 17, 40), (5, 25, 12), (7, 38, 24), (12, 42, 13), (8, 52, 23), (5, 64, 42), (17, 63, 6), (16, 57, 22), (21, 47, 5), (25, 55, 47), (31, 62, 7), (27, 68, 25), (37, 69, 30), (43, 67, 27), (52, 64, 2), (63, 69, 35), (62, 63, 34), (57, 58, 19), (42, 57, 21)";
		String[] cityStrs = solStr.replaceAll("[(]", "").split("[)],?\\s*");
		System.out.println("numCities: " + cityStrs.length);
		
		int cost = 0;
		City[] cities = new City[cityStrs.length];
		Set<Integer> ids = new HashSet<Integer>();
		for (int i = 0; i < cities.length; i++) {
			String[] xy = cityStrs[i].split(",\\s*");
			cities[i] = new City(Integer.parseInt(xy[0]), Integer.parseInt(xy[1]), i);
			ids.add(Integer.parseInt(xy[2]));

			if (i > 0) {
				cost += cities[i-1].dist(cities[i]);
			}
		}
		cost += cities[0].dist(cities[cities.length-1]);
		System.out.println("numUniqueCities: " + ids.size());
		System.out.println("cost: " + cost);
	}
}
